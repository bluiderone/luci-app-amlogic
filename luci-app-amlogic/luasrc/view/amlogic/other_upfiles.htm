<style>

#hid_btn {
	display: block;
	width: 18px;
	margin:0 auto;
}

.rotate{
	transform-origin:center center;
	transform: rotate(180deg);
	-webkit-transform: rotate(180deg);
	-moz-transform: rotate(180deg);
	-ms-transform: rotate(180deg);
	-o-transform: rotate(180deg);
	transition: transform 0.2s;
	-moz-transition: -moz-transform 0.2s;
	-moz-transition: -moz-transform 0.2s;
	-o-transition: -o-transform 0.2s;
	-ms-transition: -ms-transform 0.2s;
}

.rotate1{
	transform-origin:center center;
	transform: rotate(360deg);
	-webkit-transform: rotate(360deg);
	-moz-transform: rotate(360deg);
	-ms-transform: rotate(360deg);
	-o-transform: rotate(360deg);
	transition: transform 0.2s;
	-moz-transition: -moz-transform 0.2s;
	-moz-transition: -moz-transform 0.2s;
	-o-transition: -o-transform 0.2s;
	-ms-transition: -ms-transform 0.2s;
}

.rotate2{
	transform: rotate(0deg);
	-webkit-transform: rotate(0deg);
	-moz-transform: rotate(0deg);
	-ms-transform: rotate(0deg);
	-o-transform: rotate(0deg);
}
</style>
<fieldset class="cbi-section">
	<table width="100%">
		<tr><td width="100%" colspan="2"><p align="center"><%:When there is a whole set of OpenWrt firmware file(.img.gz suffix) or kernel files(Three kernel) in the upload file list, the relevant operation buttons will be displayed automatically.%></p></td></tr>
		<tr id="_have_firmware" style="display:none"><td width="30%" align="right"><input type="button" class="cbi-button cbi-button-reload" value="<%:Update OpenWrt firmware%>" onclick="return amlogic_update(this, 'auto')"/></td><td  width="70%" align="left"><span id="_current_firmware_version"><%:Collecting data...%></span>　<span id="_check_firmware"></span></td></tr>
		<tr id="_have_kernel" style="display:none"><td width="30%" align="right"><input type="button" class="cbi-button cbi-button-reload" value="<%:Replace OpenWrt Kernel%>" onclick="return amlogic_kernel(this)"/></td><td  width="70%" align="left"><span id="_current_kernel_version"><%:Collecting data...%></span>　<span id="_check_kernel"></span></td></tr>
	</table>
</fieldset>
<script type="text/javascript">//<![CDATA[

	function amlogic_update(btn,amlogic_update_sel)
	{
		btn.disabled = true;
		btn.value    = '<%:Updating...%> ';

		XHR.get('<%=luci.dispatcher.build_url("admin", "system", "amlogic","start_amlogic_update")%>',
			{
				amlogic_update_sel: amlogic_update_sel
			},
			function(x,status)
			{
				if ( x && x.status == 200 ) {
					if(status.rule_update_status=="1")
					{
						btn.value = '<%:Update Failed%>';
					}
					else
					{
						btn.value = '<%:Successful Update%>';
					}
				}
				else {
					btn.value = '<%:Update OpenWrt firmware%>';
				}
			}
		);
		btn.disabled = false;
		return false;
	}

	function amlogic_kernel(btn)
	{
		btn.disabled = true;
		btn.value    = '<%:Updating...%> ';

		XHR.get('<%=luci.dispatcher.build_url("admin", "system", "amlogic","start_amlogic_kernel")%>', null, function(x, status) {
				if ( x && x.status == 200 ) {
					if(status.rule_kernel_status=="1")
					{
						btn.value = '<%:Update Failed%>';
					}
					else
					{
						btn.value = '<%:Successful Update%>';
					}
				}
				else {
					btn.value = '<%:Replace OpenWrt Kernel%>';
				}
			}
		);
		btn.disabled = false;
		return false;
	}

	var have_firmware = document.getElementById('_have_firmware');
	var have_kernel = document.getElementById('_have_kernel');
	XHR.poll(1, '<%=luci.dispatcher.build_url("admin", "system", "amlogic", "start_check_upfiles")%>', status.start_check_upfiles, function(x, status) {
	if ( x && x.status == 200 ) {
		if ( status.start_check_upfiles == "firmware\n" || status.start_check_upfiles == "firmware" ) {
			have_firmware.style.display = 'block';
		}

		if ( status.start_check_upfiles == "kernel\n" || status.start_check_upfiles == "kernel" ) {
			have_kernel.style.display = 'block';
		}
	}
	});

	var start_check_firmware = document.getElementById('_check_firmware');
	XHR.poll(1, '<%=luci.dispatcher.build_url("admin", "system", "amlogic", "start_check_firmware")%>', status.start_check_firmware, function(x, status) {
	if ( x && x.status == 200 ) {
		if ( status.start_check_firmware != "\n" && status.start_check_firmware != "" ) {
			start_check_firmware.innerHTML = '<font color="blue"> '+status.start_check_firmware+'</font>';
		}
		if ( status.start_check_firmware == "\n" || status.start_check_firmware == "" ) {
			start_check_firmware.innerHTML = '';
		}
	}
	});

	var start_check_kernel = document.getElementById('_check_kernel');
	XHR.poll(1, '<%=luci.dispatcher.build_url("admin", "system", "amlogic", "start_check_kernel")%>', status.start_check_kernel, function(x, status) {
	if ( x && x.status == 200 ) {
		if ( status.start_check_kernel != "\n" && status.start_check_kernel != "" ) {
			start_check_kernel.innerHTML = '<font color="blue"> '+status.start_check_kernel+'</font>';
		}
		if ( status.start_check_kernel == "\n" || status.start_check_kernel == "" ) {
			start_check_kernel.innerHTML = '';
		}
	}
	});

	var current_firmware_version = document.getElementById('_current_firmware_version');
	var current_kernel_version = document.getElementById('_current_kernel_version');
	XHR.get('<%=luci.dispatcher.build_url("admin", "system", "amlogic", "state")%>', null, function(x, status) {
	if ( x && x.status == 200 ) {
		current_firmware_version.innerHTML = status.current_firmware_version ? "<font color=green><%:Current Version%> [ "+status.current_firmware_version+" ] </font>" : "<font color=red>"+"<%:Invalid value.%>"+"</font>";
		current_kernel_version.innerHTML = status.current_kernel_version ? "<font color=green><%:Current Version%> [ "+status.current_kernel_version+" ] </font>" : "<font color=red>"+"<%:Invalid value.%>"+"</font>";
	}
	});

//]]></script>
